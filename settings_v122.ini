[mecanica orbital]
Nombre	=	Testing
Epoch	=	21 Dec 2023 00:00:00.000
Altura	=	702 
ECC	=	0.001
INC	=	98
RAAN	=	64
AOP	=	90
TA	=	0

# ↓ unidad = días
step	            =	0.5
duration_run	    =	50

# ↓ formato = Epoch: 21 Dec 2023 00:00:00.000
startWC             =   0
# ↓ unidad = días (30s = 0.00034722222222222224)
stepWC              =   5.787037037037037e-05
duration_runWC      =   0
# duration_runWC = 0 → duration_run =   0.5+(period/(24*60*60))

start_periodWC      = 0
end_periodWC        = 0
# (!) En vez de cambiar las variables de arriba es más facil usar la función time_interval

script_name	=	NadirPointing
# NadirPointing - ThreeAxisKinematic
paneles	=	[]

[Attitude NadirPointing]
AttitudeReferenceBody	=	Earth
BodyAlignmentVector	=	[1,0,0]
AttitudeConstraintType	=	Velocity
BodyConstraintVector	=	[0,0,1]

[Attitude ThreeAxisKinematic]
# Matriz de cosenos directores (Ortonormal)
DCM1    =   [1,0,0]
DCM2    =   [0,1,0]
DCM3    =   [0,0,1]
# Velocidades angulares (deg/sec)
AngularVelocityX = 0
AngularVelocityY = 0
AngularVelocityZ = 0

[opciones avanzadas]
force_overwrite	=	True
corte_subrun	=	1 
scale_actitud	=	700
scale_sol	=	2000
scale_panel	=	2000
lines		=	True
model		=	CubeSat3U-salientes.3ds

[celda solar]
# Unidades: Tension [V] - Corriente [A] - Area [cm^2]
IVcurve_file 	=	modelo IV ATJ EMCORE.xlsx
area_cell 	=	26.6
Voc		=	2.60
Jsc		=	0.0171
Vmp		=	2.3
Jmp		=	0.0162
Tc_Vmp		=	-0.00593
Tc_Imp		=	11e-6


[mision]
calc_cons	=	False
T		=	70
#	Unidades: Temperatura [°C]
consumo_file	=	Perfil de Consumo.xlsx
case		=	-WC
distrib_type 	=   sup_disp-fix
# calc_cons = False → ("%": distribuye según el porcentaje de generación total | "sup-disp": según el area disponible en cada cara) "-" ("fix": prioriza según la lista "caras" | "max": según la generación de cada cara)
# calc_cons = True → N-max: Elige las caras que tengan mayor radiación solar y  distribuye la cantidad de celdas según | # S-max: Elige las caras que tengan mayor radiación solar y  distribuye la superficie de celdas según | S-fix: Superficie de celdas por cara (cells=list.float) | N-fix: Número de celdas por cara (cells=list.float)
cells	=	5000
#	0 a 5: +x, +y, +z, -x, -y, -z | 6 o más: Paneles agregados manualmente | Últimos indices: planos que maximizan el coseno en el año, en el WC y en el período (Según la longitud de la simulación) || N-fix: [0,1127,0,3383,0,0,0,0] | S-fix: [0,3,0,9,0,0,0,0]
caras		=	[1,3,6,5]
#	[3,6]: Elige las caras 3 y 6 para que generen un % de la generación en cada una (según porcentaje_celda) 
sup_disp	=	[8,8,8,8,8,8]
#	Superficie disponible por plano del satélite
porcentaje_celdas =	[0.9,0.1]

[degradaciones BOL]
I_mismatch	=	1
I_assembly	=	1
V_assembly	=	1
	
[degradaciones EOL]
I_radiation	=	0.994
V_radiation	=	0.954
I_UV		=	0.985
V_UV		=	0.98
V_debris	=	0.99
I_debris	=	0.97
I_contamin	=	0.99